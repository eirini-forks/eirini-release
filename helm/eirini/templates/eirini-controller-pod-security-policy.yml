---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-controller
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-controller-resource
rules:
- apiGroups:
  - eirini.cloudfoundry.org
  resources:
  - lrps
  - tasks
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - watch
  - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-controller-resource
roleRef:
  kind: ClusterRole
  name: eirini-controller-resource
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: eirini-controller
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-controller
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - eirini-controller
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-controller
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: eirini-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: eirini-controller
  namespace: {{ .Release.Namespace }}

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: eirini-controller
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'secret'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
